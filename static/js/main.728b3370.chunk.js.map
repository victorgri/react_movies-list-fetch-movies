{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAdd","useState","query","setQuery","loader","setLoader","noResult","setNoResult","foundMovie","setFoundMovie","onSubmit","e","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","trim","data","movieData","newMovie","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","disabled","onClick","App","setMovies","some","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.728b3370.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img data-cy=\"moviePoster\" src={movie.imgUrl} alt=\"Film logo\" />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img src=\"images/imdb-logo.jpeg\" alt=\"imdb\" />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">\n            {movie.title}\n          </p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [query, setQuery] = useState('');\n  const [loader, setLoader] = useState(false);\n  const [noResult, setNoResult] = useState(false);\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setNoResult(false);\n  };\n\n  const searchHandle = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setLoader(true);\n    getMovie(query.trim())\n      .then((data) => {\n        if (!data || ('Response' in data && data.Response === 'False')) {\n          setNoResult(true);\n          setFoundMovie(null);\n        } else {\n          const movieData = data as MovieData;\n\n          const newMovie: Movie = {\n            title: movieData.Title,\n            description: movieData.Plot,\n            imgUrl:\n              movieData.Poster !== 'N/A'\n                ? movieData.Poster\n                : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n            imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n            imdbId: movieData.imdbID,\n          };\n\n          setFoundMovie(newMovie);\n        }\n      })\n      .catch(() => setFoundMovie(null))\n      .finally(() => setLoader(false));\n  };\n\n  const addHandler = () => {\n    setQuery('');\n    if (foundMovie) {\n      onAdd(foundMovie);\n    }\n\n    setFoundMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={searchHandle}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': noResult,\n              })}\n              value={query}\n              onChange={handleQuery}\n            />\n          </div>\n\n          {noResult && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={!query}\n              className={classNames('button is-light', {\n                'is-loading': loader,\n              })}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {foundMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => addHandler()}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {foundMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={foundMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=4bf33d3d';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { Movie } from './types/Movie';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    if (movies.some(({ imdbId }) => imdbId === movie.imdbId)) {\n      return;\n    }\n\n    setMovies((prev) => [...prev, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}